Summary:

I tried to use the add/scan approach for the partition routine. Though the code doesnt work for number of elements greater than 10000. I tested this out by individually running for 10000 elements.

Approaches:
1. First I tried using cilk_for along with cilk_opadd for the counter variables n_lt, n_gt, n_eq. Though couldn't find a parallel way to fill in the array even using the cilk directives. So abandoned it.

2. Trying to use the prefix scan approach to partition the array. Here my initial array is derived by comapring the elements with a pivot value. PUtting a 1 if the element is less than pivot and 0 otherwise. 
2(a). Then I take a exclusive scan for this array.
2(b).Now for all the element indexes which had 1 in the initial array(those that were small in the pivot), the exclusive scan array has corresponding indexs which partitions them.



TODO:
1. Throws segmentation fault for 100000 elements!!!!! Need to fix this!

NOTE: Pretty certain the segmentation fault happens because I try to allocate more memory than maybe I am authorized too, since when I tried to paralllize the array swaping, I allocated another array copy and it started failing at 10,000 elements. Therefor, need to do away with these dummy array as much as possible.

2. Need to make exclusive scan thread safe, so that I can use cilk_for in it.
3. Need to figure out a better way to keep a track of number of less than elements.




Questions/Findings:
1. To shift the elements in the array by right one place. What is better? To loop though it and swap the consecutive variables? Or make a auxilary array and use cilk?




--
Akash Gangil
